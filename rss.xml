<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>p5.js (processing) Explorations</title><link>https://necromuralist.github.io/p5_explorations/</link><description>Notes made while trying to learn p5.js.</description><atom:link type="application/rss+xml" href="https://necromuralist.github.io/p5_explorations/rss.xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sat, 20 May 2017 22:55:03 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Testing The Re-Post</title><link>https://necromuralist.github.io/p5_explorations/posts/testing-the-re-post/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div&gt;&lt;p&gt;This is a re-do of the &lt;a class="reference external" href="https://necromuralist.github.io/p5_explorations/posts/testing-with-rst/"&gt;last post&lt;/a&gt; to make sure that a second post will work like I think it will.&lt;/p&gt;
&lt;div class="section" id="the-re-do"&gt;
&lt;h2&gt;The Re-Do&lt;/h2&gt;
&lt;div id="get_re_started"&gt;
   &lt;script language="javascript" type="text/javascript" src="https://necromuralist.github.io/p5_explorations/posts/testing-the-re-post/get_re_started.js"&gt;&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;If you can't tell, there's a processing sketch in that blank box above this line. If you move your mouse over it p5 will draw some circles with the radii based on how fast your mouse is moving. If you click and drag it inverts the colors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-this-accomplished"&gt;
&lt;h2&gt;What This Accomplished&lt;/h2&gt;
&lt;p&gt;The first thing that happened when I added this post was that both the class based versions crashed and the function-based version started working. I don't think adding this was what caused it, it seems that p5 wasn't getting loadded before I created the p5 object.&lt;/p&gt;
&lt;pre class="code js"&gt;&lt;a name="rest_code_63f16a2f0ed24efbb32ec267379a43c2-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;p5_restart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;p5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;build_get_re_started&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;parent_div_id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The question is really why it was working at all before. Anyway, I moved the &lt;tt class="docutils literal"&gt;script&lt;/tt&gt; tag to download p5 from the CDN to the HTML HEAD and that seems to have fixed it (so far). The main thing is that this post can coexist with the previous post on the same page (and they don't interfere with each other), and the p5 library is only getting downloaded once (in the HEAD).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>processing p5 nikola</category><guid>https://necromuralist.github.io/p5_explorations/posts/testing-the-re-post/</guid><pubDate>Sun, 07 May 2017 21:59:44 GMT</pubDate></item><item><title>Testing With RST</title><link>https://necromuralist.github.io/p5_explorations/posts/testing-with-rst/</link><dc:creator>The Cloistered Monkey</dc:creator><description>&lt;div&gt;&lt;p&gt;This is a re-do of an &lt;a class="reference external" href="https://necromuralist.github.io/posts/processing-test/"&gt;old post&lt;/a&gt; I made to &lt;a class="reference external" href="https://necromuralist.github.io/"&gt;my main site&lt;/a&gt; about making a &lt;a class="reference external" href="http://p5js.org/"&gt;p5&lt;/a&gt; restructured-text post in &lt;a class="reference external" href="https://www.getnikola.com/handbook.html"&gt;nikola&lt;/a&gt; based on the p5 &lt;a class="reference external" href="http://p5js.org/get-started/"&gt;get started&lt;/a&gt; tutorial. I'm repeating it to make sure I can get it to work here, since it's been so long since I've done it.&lt;/p&gt;
&lt;p&gt;First the link to the p5 code:&lt;/p&gt;
&lt;pre class="code html"&gt;&lt;a name="rest_code_fe32a72c68874957b880e5d166ca9741-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.10/p5.min.js"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;On the old post I had included the html tag directly in the post (using the &lt;tt class="docutils literal"&gt;.. raw::&lt;/tt&gt; directive), but I thought that would be wasteful since you can have multiple posts on one page so I moved it the the &lt;tt class="docutils literal"&gt;BODY_END&lt;/tt&gt; variable in the &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; file which adds it to the end of the HTML body. This seemed to work for the first sketch but when I moved to the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;instance-mode&lt;/span&gt;&lt;/tt&gt; version (see below) it broke (probably because &lt;cite&gt;p5&lt;/cite&gt; wasn't loaded when I was trying to create an instance of it) so I moved it to &lt;tt class="docutils literal"&gt;EXTRA_HEAD_DATA&lt;/tt&gt; which so far seems to work. I also experimented with the &lt;a class="reference external" href="https://plugins.getnikola.com/v7/meta_template/"&gt;meta-template plugin&lt;/a&gt; but since this repository is all about using P5, that didn't seem the way to go, since it would basically have the same problem as using the &lt;tt class="docutils literal"&gt;.. raw::&lt;/tt&gt; directive (which is really doing the same thing as the &lt;tt class="docutils literal"&gt;meta_template&lt;/tt&gt; approach, &lt;tt class="docutils literal"&gt;meta_template&lt;/tt&gt; just makes it a little more convenient to do it).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="a-version-that-worked-once"&gt;
&lt;h2&gt;A Version That Worked Once&lt;/h2&gt;
&lt;p&gt;Here's the javascript for the broken version.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://necromuralist.github.io/p5_explorations/listings/get_started.js.html"&gt;get_started.js&lt;/a&gt;  &lt;a class="reference external" href="https://necromuralist.github.io/p5_explorations/listings/get_started.js"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code javascript"&gt;&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-2"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;parent_div_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"get_started"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-3"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;// this sets the width of the canvas to match the div (center column)&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-4"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createCanvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;parent_div_id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;outerWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-5"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parent_div_id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-6"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-7"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;strokeWeight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-8"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-9"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-12"&gt;&lt;/a&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;mousePressed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-13"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;/* set background to blue */&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-14"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-17"&gt;&lt;/a&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;mouseReleased&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-18"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;/* set background to white */&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-19"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-20"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-21"&gt;&lt;/a&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-22"&gt;&lt;/a&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-23"&gt;&lt;/a&gt;  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-24"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;/* Draw circles that change diameter based on mouse speed */&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-25"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;/* and color based on if mouse-pressed (or not pressed)   */&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-26"&gt;&lt;/a&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mouseIsPressed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-27"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-28"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-29"&gt;&lt;/a&gt;  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-30"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-31"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-32"&gt;&lt;/a&gt;  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-33"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;diameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pmouseX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pmouseY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mouseX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mouseY&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-34"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;ellipse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mouseX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mouseY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_4653ae8c6e1b4de68175696d757d2651-35"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;This next bit shows how to include the sketch in the post. The naming of the &lt;tt class="docutils literal"&gt;div&lt;/tt&gt; is important (&lt;tt class="docutils literal"&gt;"get_started"&lt;/tt&gt; in this case) - the javascript has to reference it (i.e. &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;canvas.parent("get_started")&lt;/span&gt;&lt;/tt&gt;) or the sketch will not appear right here (see the notes below). I'm also using it to get the width for the image. As you can see from the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;src='get_started.js&lt;/span&gt;&lt;/tt&gt; part, this loads a file called 'get_started.js' that I created earlier and put in the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;files/posts/testing-with-rst&lt;/span&gt;&lt;/tt&gt; folder (the directory name matches the name of this blog-post file - &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;testing-with-rst.rst&lt;/span&gt;&lt;/tt&gt;).&lt;/p&gt;
&lt;pre class="code html"&gt;&lt;a name="rest_code_fb98780770ad4869904d380de183da3e-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"get_started"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_fb98780770ad4869904d380de183da3e-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"javascript"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'get_started.js'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_fb98780770ad4869904d380de183da3e-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;div id="get_started"&gt;
   &lt;script language="javascript" type="text/javascript" src="https://necromuralist.github.io/p5_explorations/posts/testing-with-rst/get_started.js"&gt;&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;This at first worked to create a processing sketch in that blank box above this line, but once I added another sketch it broke. Originally this sketch seemed to break the second one, but then I fixed the second sketch and it broke this one. I realized that I was defining the same function names (e.g. &lt;tt class="docutils literal"&gt;mousePressed&lt;/tt&gt;) in both so one of them was overwriting the other. Now it seems to work again, kind of... If you move your mouse cursor over fast enough that the circle is large while the sketch below is visible you'll see that the two of them have created some kind of super-canvas where they events over one also effects the other. So leaving this in has broken both of them to some degree. I think this function-based approach just won't work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-class-based-version"&gt;
&lt;h2&gt;The Class-Based Version&lt;/h2&gt;
&lt;p&gt;My solution was to use the &lt;a class="reference external" href="https://github.com/processing/p5.js/wiki/p5.js-overview#instantiation--namespace"&gt;instance mode&lt;/a&gt; concept (which was surprisingly hard to find using google), basically wrapping everything in a class rather than using the global namespace.&lt;/p&gt;
&lt;div id="get_started_2"&gt;
   &lt;script language="javascript" type="text/javascript" src="https://necromuralist.github.io/p5_explorations/posts/testing-with-rst/get_started_2.js"&gt;&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;If you can't tell, there's a processing sketch in that blank box above this line. If you move your mouse over it p5 will draw some circles with the radii based on how fast your mouse is moving. If you click and drag it inverts the colors.&lt;/p&gt;
&lt;p&gt;Here's the javascript that created it.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://necromuralist.github.io/p5_explorations/listings/get_started_2.js.html"&gt;get_started_2.js&lt;/a&gt;  &lt;a class="reference external" href="https://necromuralist.github.io/p5_explorations/listings/get_started_2.js"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code javascript"&gt;&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-2"&gt;&lt;/a&gt;&lt;span class="cm"&gt; * Instance mode implementation of a simple sketch that draws blue circles&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-3"&gt;&lt;/a&gt;&lt;span class="cm"&gt; * on a white background when the user moves the mouse cursor over it, basing&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-4"&gt;&lt;/a&gt;&lt;span class="cm"&gt; * the size of the circles on how fast the cursor is moving. If the user clicks&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-5"&gt;&lt;/a&gt;&lt;span class="cm"&gt; * and drags the mouse it draws white circles on a blue background instead.&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-6"&gt;&lt;/a&gt;&lt;span class="cm"&gt; **/&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-7"&gt;&lt;/a&gt;&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;GetStarted2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-8"&gt;&lt;/a&gt;  &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-9"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   * The constructor sets up the p5 functions&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-10"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   *&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-11"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   * @param {object} p: the `p5` object&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-12"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   * @param {string} parent_div_id: ID of the div to attach the canvas to&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-13"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   * @param {integer} height: Pixel-heght for the canvas&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-14"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   **/&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-15"&gt;&lt;/a&gt;  &lt;span class="nx"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;parent_div_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-16"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-17"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * Creates the canvas using ``height`` and the width of the parent div&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-18"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * Also sets up some coloring&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-19"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     **/&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-20"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-21"&gt;&lt;/a&gt;      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createCanvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"#"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;parent_div_id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;outerWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-22"&gt;&lt;/a&gt;                                  &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-23"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-24"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeWeight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-25"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-26"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-27"&gt;&lt;/a&gt;    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-28"&gt;&lt;/a&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-29"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-30"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * sets the background and fill to blue&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-31"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * and the stroke to white&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-32"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     **/&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-33"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mousePressed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-34"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-35"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-36"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-37"&gt;&lt;/a&gt;    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-38"&gt;&lt;/a&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-39"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-40"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * sets the background and fill to white&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-41"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * and the stroke to blue&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-42"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     **/&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-43"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouseReleased&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-44"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-45"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-46"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-47"&gt;&lt;/a&gt;    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-48"&gt;&lt;/a&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-49"&gt;&lt;/a&gt;    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-50"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     * Draws circles that change diameter based on mouse speed&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-51"&gt;&lt;/a&gt;&lt;span class="cm"&gt;     **/&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-52"&gt;&lt;/a&gt;    &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-53"&gt;&lt;/a&gt;      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-54"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;diameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pmouseX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouseY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouseX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouseY&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-55"&gt;&lt;/a&gt;      &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ellipse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouseX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mouseY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-56"&gt;&lt;/a&gt;    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-57"&gt;&lt;/a&gt;  &lt;span class="p"&gt;};&lt;/span&gt; &lt;span class="c1"&gt;// end constructor&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-58"&gt;&lt;/a&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="c1"&gt;// end GetStarted2&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-59"&gt;&lt;/a&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-60"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-61"&gt;&lt;/a&gt;&lt;span class="cm"&gt; * Builds the GetStarted2 sketch&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-62"&gt;&lt;/a&gt;&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-63"&gt;&lt;/a&gt;&lt;span class="cm"&gt; * p5 thinks it's getting a function, not a class&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-64"&gt;&lt;/a&gt;&lt;span class="cm"&gt; * so it doesn't use the `new` statement. This function&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-65"&gt;&lt;/a&gt;&lt;span class="cm"&gt; * works around that and passes in some parameters&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-66"&gt;&lt;/a&gt;&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-67"&gt;&lt;/a&gt;&lt;span class="cm"&gt; * @param {object} p: a ``p5`` instance&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-68"&gt;&lt;/a&gt;&lt;span class="cm"&gt; **/&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-69"&gt;&lt;/a&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;build_get_started_2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-70"&gt;&lt;/a&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GetStarted2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"get_started_2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-71"&gt;&lt;/a&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-72"&gt;&lt;/a&gt;
&lt;a name="rest_code_9c7a5583838d44b49a56f6d8baaa59ee-73"&gt;&lt;/a&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;p5_retest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;p5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;build_get_started_2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"get_started_2"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="a-little-explanation"&gt;
&lt;h2&gt;A Little Explanation&lt;/h2&gt;
&lt;p&gt;So, for my future self who will likely forget what this is doing, here's some notes.&lt;/p&gt;
&lt;pre class="code js"&gt;&lt;a name="rest_code_cbf60b21e6af4091a8f5f2406750fb14-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;p5_retest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;p5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;build_get_started_2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"get_started_2"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The last line creates a &lt;tt class="docutils literal"&gt;p5&lt;/tt&gt; object which calls the &lt;tt class="docutils literal"&gt;build_get_started_2&lt;/tt&gt; function, passing the instance into it. In addition, if you pass in the ID of the container, it will attach the sketch to it. So the second argument &lt;tt class="docutils literal"&gt;"get_started_2"&lt;/tt&gt; does what you would otherwise do in the constructor like this:&lt;/p&gt;
&lt;pre class="code js"&gt;&lt;a name="rest_code_99751ce5d7a8444c9524412f528cb0d8-1"&gt;&lt;/a&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"get_started_2"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;If you omit the name of the parent ID when creating the &lt;tt class="docutils literal"&gt;p5&lt;/tt&gt; object then this line would need to go back into the constructor. I kind of like using the explicit &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;p.canvas.parent("get_started_2");&lt;/span&gt;&lt;/tt&gt; call, but I already did something similar to it in the previous (broken) sketch so I thought I'd pass it in to the &lt;tt class="docutils literal"&gt;p5&lt;/tt&gt; constructor here so I'd have it documented.&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;build_get_started_2&lt;/tt&gt; function:&lt;/p&gt;
&lt;pre class="code js"&gt;&lt;a name="rest_code_5fa68122e14f45fbbbfa2d56598fe665-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;build_get_started_2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;a name="rest_code_5fa68122e14f45fbbbfa2d56598fe665-2"&gt;&lt;/a&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GetStarted2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"get_started_2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5fa68122e14f45fbbbfa2d56598fe665-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;This works around a problem that I've often frequently with callback-functions - you have no control over how the function is going to be called, and without the code or explicit documentation you have to work with it as a black-box (I'm sure it's documented somewhere but I find the processing documentation for things other than the sketching to be a little hard to find). In this case I didn't really plan on it being a function, which probably wouldn't be a problem for someone who works with javascript a lot, but I'm not one of them. I'm not really taking advantage of any class-based features in my sketch so I could have converted it to a function, but I prefer classes (probably because I mostly code in python) so I'll probably be using them in the future, so it was good to get this figured out now. Also, since I had to make a builder anyway, this allowed me to put the constants (like the height) outside of the class and pass them in as parameters.&lt;/p&gt;
&lt;p&gt;Other than that, the code is pretty close to the function-based version, except using th. &lt;tt class="docutils literal"&gt;p5&lt;/tt&gt; instance instead of the global functions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notes"&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;In order to get the javascript into the final HTML you need to put in the &lt;tt class="docutils literal"&gt;listings&lt;/tt&gt; folder at the root of the nikola folder and use the &lt;a class="reference external" href="https://www.getnikola.com/handbook.html#listing"&gt;listing&lt;/a&gt; &lt;cite&gt;reStructuredText&lt;/cite&gt; directive instead of &lt;tt class="docutils literal"&gt;include&lt;/tt&gt; (this is a special &lt;em&gt;nikola&lt;/em&gt; directive). This not only shows it but creates two links - the one with the file name links to a formatted version of the code and the &lt;cite&gt;(Source)&lt;/cite&gt; link lets you download it as plain-text. Showing the code and creating another page seemed kind of redundant to me, but I think the purpose is to provide &lt;a class="reference external" href="https://necromuralist.github.io/p5_explorations/listings/get_started.js.html"&gt;a link you can refer to outside of this post&lt;/a&gt;. You can't see the directive but it says:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code rst"&gt;&lt;a name="rest_code_4cc5e2f004924d47aef54e5848d28b1c-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;listing&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; get_started.js javascript
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;Another thing I forgot to mention in the other post was that &lt;em&gt;nikola&lt;/em&gt; looks for the javascript (when it includes it in the html, not when it wants to show it as in the first note) in the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;files/posts/&amp;lt;post-name-slugified&amp;gt;/&lt;/span&gt;&lt;/tt&gt; directory, so in this case, besides putting the javascript in the listings folder, I also had to put another copy of it in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;files/posts/testing-with-rst/&lt;/span&gt;&lt;/tt&gt;. There must be an easier way. Well, I guess it's not hard, it just seems inefficient.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>processing p5 nikola</category><guid>https://necromuralist.github.io/p5_explorations/posts/testing-with-rst/</guid><pubDate>Sun, 07 May 2017 21:59:44 GMT</pubDate></item></channel></rss>